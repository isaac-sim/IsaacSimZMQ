// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client_stream_message.proto
// Protobuf C++ Version: 5.26.0

#ifndef GOOGLE_PROTOBUF_INCLUDED_client_5fstream_5fmessage_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_client_5fstream_5fmessage_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION != 5026000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_client_5fstream_5fmessage_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_client_5fstream_5fmessage_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_client_5fstream_5fmessage_2eproto;
class BBox2D;
struct BBox2DDefaultTypeInternal;
extern BBox2DDefaultTypeInternal _BBox2D_default_instance_;
class BBox2DInfo;
struct BBox2DInfoDefaultTypeInternal;
extern BBox2DInfoDefaultTypeInternal _BBox2DInfo_default_instance_;
class BBox2DInfo_IdToLabelsEntry_DoNotUse;
struct BBox2DInfo_IdToLabelsEntry_DoNotUseDefaultTypeInternal;
extern BBox2DInfo_IdToLabelsEntry_DoNotUseDefaultTypeInternal _BBox2DInfo_IdToLabelsEntry_DoNotUse_default_instance_;
class BBox2DType;
struct BBox2DTypeDefaultTypeInternal;
extern BBox2DTypeDefaultTypeInternal _BBox2DType_default_instance_;
class Camera;
struct CameraDefaultTypeInternal;
extern CameraDefaultTypeInternal _Camera_default_instance_;
class ClientStreamMessage;
struct ClientStreamMessageDefaultTypeInternal;
extern ClientStreamMessageDefaultTypeInternal _ClientStreamMessage_default_instance_;
class Clock;
struct ClockDefaultTypeInternal;
extern ClockDefaultTypeInternal _Clock_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google


// ===================================================================


// -------------------------------------------------------------------

class Clock final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Clock) */ {
 public:
  inline Clock() : Clock(nullptr) {}
  ~Clock() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Clock(
      ::google::protobuf::internal::ConstantInitialized);

  inline Clock(const Clock& from) : Clock(nullptr, from) {}
  inline Clock(Clock&& from) noexcept
      : Clock(nullptr, std::move(from)) {}
  inline Clock& operator=(const Clock& from) {
    CopyFrom(from);
    return *this;
  }
  inline Clock& operator=(Clock&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Clock& default_instance() {
    return *internal_default_instance();
  }
  static inline const Clock* internal_default_instance() {
    return reinterpret_cast<const Clock*>(
        &_Clock_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(Clock& a, Clock& b) { a.Swap(&b); }
  inline void Swap(Clock* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Clock* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Clock* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Clock>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Clock& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Clock& from) { Clock::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Clock* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "Clock"; }

 protected:
  explicit Clock(::google::protobuf::Arena* arena);
  Clock(::google::protobuf::Arena* arena, const Clock& from);
  Clock(::google::protobuf::Arena* arena, Clock&& from) noexcept
      : Clock(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSimDtFieldNumber = 1,
    kSysDtFieldNumber = 2,
    kSimTimeFieldNumber = 3,
    kSysTimeFieldNumber = 4,
  };
  // double sim_dt = 1;
  void clear_sim_dt() ;
  double sim_dt() const;
  void set_sim_dt(double value);

  private:
  double _internal_sim_dt() const;
  void _internal_set_sim_dt(double value);

  public:
  // double sys_dt = 2;
  void clear_sys_dt() ;
  double sys_dt() const;
  void set_sys_dt(double value);

  private:
  double _internal_sys_dt() const;
  void _internal_set_sys_dt(double value);

  public:
  // double sim_time = 3;
  void clear_sim_time() ;
  double sim_time() const;
  void set_sim_time(double value);

  private:
  double _internal_sim_time() const;
  void _internal_set_sim_time(double value);

  public:
  // double sys_time = 4;
  void clear_sys_time() ;
  double sys_time() const;
  void set_sys_time(double value);

  private:
  double _internal_sys_time() const;
  void _internal_set_sys_time(double value);

  public:
  // @@protoc_insertion_point(class_scope:Clock)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    double sim_dt_;
    double sys_dt_;
    double sim_time_;
    double sys_time_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_client_5fstream_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class Camera final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Camera) */ {
 public:
  inline Camera() : Camera(nullptr) {}
  ~Camera() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Camera(
      ::google::protobuf::internal::ConstantInitialized);

  inline Camera(const Camera& from) : Camera(nullptr, from) {}
  inline Camera(Camera&& from) noexcept
      : Camera(nullptr, std::move(from)) {}
  inline Camera& operator=(const Camera& from) {
    CopyFrom(from);
    return *this;
  }
  inline Camera& operator=(Camera&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Camera& default_instance() {
    return *internal_default_instance();
  }
  static inline const Camera* internal_default_instance() {
    return reinterpret_cast<const Camera*>(
        &_Camera_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(Camera& a, Camera& b) { a.Swap(&b); }
  inline void Swap(Camera* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Camera* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Camera* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Camera>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Camera& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Camera& from) { Camera::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Camera* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "Camera"; }

 protected:
  explicit Camera(::google::protobuf::Arena* arena);
  Camera(::google::protobuf::Arena* arena, const Camera& from);
  Camera(::google::protobuf::Arena* arena, Camera&& from) noexcept
      : Camera(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kViewMatrixRosFieldNumber = 1,
    kCameraScaleFieldNumber = 2,
    kIntrinsicsMatrixFieldNumber = 3,
  };
  // repeated double view_matrix_ros = 1;
  int view_matrix_ros_size() const;
  private:
  int _internal_view_matrix_ros_size() const;

  public:
  void clear_view_matrix_ros() ;
  double view_matrix_ros(int index) const;
  void set_view_matrix_ros(int index, double value);
  void add_view_matrix_ros(double value);
  const ::google::protobuf::RepeatedField<double>& view_matrix_ros() const;
  ::google::protobuf::RepeatedField<double>* mutable_view_matrix_ros();

  private:
  const ::google::protobuf::RepeatedField<double>& _internal_view_matrix_ros() const;
  ::google::protobuf::RepeatedField<double>* _internal_mutable_view_matrix_ros();

  public:
  // repeated double camera_scale = 2;
  int camera_scale_size() const;
  private:
  int _internal_camera_scale_size() const;

  public:
  void clear_camera_scale() ;
  double camera_scale(int index) const;
  void set_camera_scale(int index, double value);
  void add_camera_scale(double value);
  const ::google::protobuf::RepeatedField<double>& camera_scale() const;
  ::google::protobuf::RepeatedField<double>* mutable_camera_scale();

  private:
  const ::google::protobuf::RepeatedField<double>& _internal_camera_scale() const;
  ::google::protobuf::RepeatedField<double>* _internal_mutable_camera_scale();

  public:
  // repeated double intrinsics_matrix = 3;
  int intrinsics_matrix_size() const;
  private:
  int _internal_intrinsics_matrix_size() const;

  public:
  void clear_intrinsics_matrix() ;
  double intrinsics_matrix(int index) const;
  void set_intrinsics_matrix(int index, double value);
  void add_intrinsics_matrix(double value);
  const ::google::protobuf::RepeatedField<double>& intrinsics_matrix() const;
  ::google::protobuf::RepeatedField<double>* mutable_intrinsics_matrix();

  private:
  const ::google::protobuf::RepeatedField<double>& _internal_intrinsics_matrix() const;
  ::google::protobuf::RepeatedField<double>* _internal_mutable_intrinsics_matrix();

  public:
  // @@protoc_insertion_point(class_scope:Camera)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedField<double> view_matrix_ros_;
    ::google::protobuf::RepeatedField<double> camera_scale_;
    ::google::protobuf::RepeatedField<double> intrinsics_matrix_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_client_5fstream_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class BBox2DType final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:BBox2DType) */ {
 public:
  inline BBox2DType() : BBox2DType(nullptr) {}
  ~BBox2DType() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BBox2DType(
      ::google::protobuf::internal::ConstantInitialized);

  inline BBox2DType(const BBox2DType& from) : BBox2DType(nullptr, from) {}
  inline BBox2DType(BBox2DType&& from) noexcept
      : BBox2DType(nullptr, std::move(from)) {}
  inline BBox2DType& operator=(const BBox2DType& from) {
    CopyFrom(from);
    return *this;
  }
  inline BBox2DType& operator=(BBox2DType&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BBox2DType& default_instance() {
    return *internal_default_instance();
  }
  static inline const BBox2DType* internal_default_instance() {
    return reinterpret_cast<const BBox2DType*>(
        &_BBox2DType_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(BBox2DType& a, BBox2DType& b) { a.Swap(&b); }
  inline void Swap(BBox2DType* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BBox2DType* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BBox2DType* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<BBox2DType>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BBox2DType& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BBox2DType& from) { BBox2DType::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BBox2DType* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "BBox2DType"; }

 protected:
  explicit BBox2DType(::google::protobuf::Arena* arena);
  BBox2DType(::google::protobuf::Arena* arena, const BBox2DType& from);
  BBox2DType(::google::protobuf::Arena* arena, BBox2DType&& from) noexcept
      : BBox2DType(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSemanticIdFieldNumber = 1,
    kXMinFieldNumber = 2,
    kYMinFieldNumber = 3,
    kXMaxFieldNumber = 4,
    kYMaxFieldNumber = 5,
    kOcclusionRatioFieldNumber = 6,
  };
  // uint32 semanticId = 1;
  void clear_semanticid() ;
  ::uint32_t semanticid() const;
  void set_semanticid(::uint32_t value);

  private:
  ::uint32_t _internal_semanticid() const;
  void _internal_set_semanticid(::uint32_t value);

  public:
  // int32 xMin = 2;
  void clear_xmin() ;
  ::int32_t xmin() const;
  void set_xmin(::int32_t value);

  private:
  ::int32_t _internal_xmin() const;
  void _internal_set_xmin(::int32_t value);

  public:
  // int32 yMin = 3;
  void clear_ymin() ;
  ::int32_t ymin() const;
  void set_ymin(::int32_t value);

  private:
  ::int32_t _internal_ymin() const;
  void _internal_set_ymin(::int32_t value);

  public:
  // int32 xMax = 4;
  void clear_xmax() ;
  ::int32_t xmax() const;
  void set_xmax(::int32_t value);

  private:
  ::int32_t _internal_xmax() const;
  void _internal_set_xmax(::int32_t value);

  public:
  // int32 yMax = 5;
  void clear_ymax() ;
  ::int32_t ymax() const;
  void set_ymax(::int32_t value);

  private:
  ::int32_t _internal_ymax() const;
  void _internal_set_ymax(::int32_t value);

  public:
  // float occlusionRatio = 6;
  void clear_occlusionratio() ;
  float occlusionratio() const;
  void set_occlusionratio(float value);

  private:
  float _internal_occlusionratio() const;
  void _internal_set_occlusionratio(float value);

  public:
  // @@protoc_insertion_point(class_scope:BBox2DType)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint32_t semanticid_;
    ::int32_t xmin_;
    ::int32_t ymin_;
    ::int32_t xmax_;
    ::int32_t ymax_;
    float occlusionratio_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_client_5fstream_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class BBox2DInfo_IdToLabelsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          BBox2DInfo_IdToLabelsEntry_DoNotUse, std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      BBox2DInfo_IdToLabelsEntry_DoNotUse, std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  BBox2DInfo_IdToLabelsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BBox2DInfo_IdToLabelsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit BBox2DInfo_IdToLabelsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const BBox2DInfo_IdToLabelsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const BBox2DInfo_IdToLabelsEntry_DoNotUse*>(
        &_BBox2DInfo_IdToLabelsEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "BBox2DInfo.IdToLabelsEntry.key");
 }
  static bool ValidateValue(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "BBox2DInfo.IdToLabelsEntry.value");
 }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_client_5fstream_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class BBox2DInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:BBox2DInfo) */ {
 public:
  inline BBox2DInfo() : BBox2DInfo(nullptr) {}
  ~BBox2DInfo() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BBox2DInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline BBox2DInfo(const BBox2DInfo& from) : BBox2DInfo(nullptr, from) {}
  inline BBox2DInfo(BBox2DInfo&& from) noexcept
      : BBox2DInfo(nullptr, std::move(from)) {}
  inline BBox2DInfo& operator=(const BBox2DInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline BBox2DInfo& operator=(BBox2DInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BBox2DInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const BBox2DInfo* internal_default_instance() {
    return reinterpret_cast<const BBox2DInfo*>(
        &_BBox2DInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(BBox2DInfo& a, BBox2DInfo& b) { a.Swap(&b); }
  inline void Swap(BBox2DInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BBox2DInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BBox2DInfo* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<BBox2DInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BBox2DInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BBox2DInfo& from) { BBox2DInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BBox2DInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "BBox2DInfo"; }

 protected:
  explicit BBox2DInfo(::google::protobuf::Arena* arena);
  BBox2DInfo(::google::protobuf::Arena* arena, const BBox2DInfo& from);
  BBox2DInfo(::google::protobuf::Arena* arena, BBox2DInfo&& from) noexcept
      : BBox2DInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdToLabelsFieldNumber = 1,
    kBboxIdsFieldNumber = 2,
  };
  // map<string, string> idToLabels = 1;
  int idtolabels_size() const;
  private:
  int _internal_idtolabels_size() const;

  public:
  void clear_idtolabels() ;
  const ::google::protobuf::Map<std::string, std::string>& idtolabels() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_idtolabels();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_idtolabels() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_idtolabels();

  public:
  // repeated int32 bboxIds = 2;
  int bboxids_size() const;
  private:
  int _internal_bboxids_size() const;

  public:
  void clear_bboxids() ;
  ::int32_t bboxids(int index) const;
  void set_bboxids(int index, ::int32_t value);
  void add_bboxids(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& bboxids() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_bboxids();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_bboxids() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_bboxids();

  public:
  // @@protoc_insertion_point(class_scope:BBox2DInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 1,
      29, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::MapField<BBox2DInfo_IdToLabelsEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        idtolabels_;
    ::google::protobuf::RepeatedField<::int32_t> bboxids_;
    mutable ::google::protobuf::internal::CachedSize _bboxids_cached_byte_size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_client_5fstream_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class BBox2D final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:BBox2D) */ {
 public:
  inline BBox2D() : BBox2D(nullptr) {}
  ~BBox2D() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BBox2D(
      ::google::protobuf::internal::ConstantInitialized);

  inline BBox2D(const BBox2D& from) : BBox2D(nullptr, from) {}
  inline BBox2D(BBox2D&& from) noexcept
      : BBox2D(nullptr, std::move(from)) {}
  inline BBox2D& operator=(const BBox2D& from) {
    CopyFrom(from);
    return *this;
  }
  inline BBox2D& operator=(BBox2D&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BBox2D& default_instance() {
    return *internal_default_instance();
  }
  static inline const BBox2D* internal_default_instance() {
    return reinterpret_cast<const BBox2D*>(
        &_BBox2D_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(BBox2D& a, BBox2D& b) { a.Swap(&b); }
  inline void Swap(BBox2D* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BBox2D* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BBox2D* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<BBox2D>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BBox2D& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BBox2D& from) { BBox2D::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BBox2D* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "BBox2D"; }

 protected:
  explicit BBox2D(::google::protobuf::Arena* arena);
  BBox2D(::google::protobuf::Arena* arena, const BBox2D& from);
  BBox2D(::google::protobuf::Arena* arena, BBox2D&& from) noexcept
      : BBox2D(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 1,
    kInfoFieldNumber = 2,
  };
  // repeated .BBox2DType data = 1;
  int data_size() const;
  private:
  int _internal_data_size() const;

  public:
  void clear_data() ;
  ::BBox2DType* mutable_data(int index);
  ::google::protobuf::RepeatedPtrField<::BBox2DType>* mutable_data();

  private:
  const ::google::protobuf::RepeatedPtrField<::BBox2DType>& _internal_data() const;
  ::google::protobuf::RepeatedPtrField<::BBox2DType>* _internal_mutable_data();
  public:
  const ::BBox2DType& data(int index) const;
  ::BBox2DType* add_data();
  const ::google::protobuf::RepeatedPtrField<::BBox2DType>& data() const;
  // .BBox2DInfo info = 2;
  bool has_info() const;
  void clear_info() ;
  const ::BBox2DInfo& info() const;
  PROTOBUF_NODISCARD ::BBox2DInfo* release_info();
  ::BBox2DInfo* mutable_info();
  void set_allocated_info(::BBox2DInfo* value);
  void unsafe_arena_set_allocated_info(::BBox2DInfo* value);
  ::BBox2DInfo* unsafe_arena_release_info();

  private:
  const ::BBox2DInfo& _internal_info() const;
  ::BBox2DInfo* _internal_mutable_info();

  public:
  // @@protoc_insertion_point(class_scope:BBox2D)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::BBox2DType > data_;
    ::BBox2DInfo* info_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_client_5fstream_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class ClientStreamMessage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ClientStreamMessage) */ {
 public:
  inline ClientStreamMessage() : ClientStreamMessage(nullptr) {}
  ~ClientStreamMessage() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ClientStreamMessage(
      ::google::protobuf::internal::ConstantInitialized);

  inline ClientStreamMessage(const ClientStreamMessage& from) : ClientStreamMessage(nullptr, from) {}
  inline ClientStreamMessage(ClientStreamMessage&& from) noexcept
      : ClientStreamMessage(nullptr, std::move(from)) {}
  inline ClientStreamMessage& operator=(const ClientStreamMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline ClientStreamMessage& operator=(ClientStreamMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ClientStreamMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const ClientStreamMessage* internal_default_instance() {
    return reinterpret_cast<const ClientStreamMessage*>(
        &_ClientStreamMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(ClientStreamMessage& a, ClientStreamMessage& b) { a.Swap(&b); }
  inline void Swap(ClientStreamMessage* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ClientStreamMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ClientStreamMessage* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ClientStreamMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ClientStreamMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ClientStreamMessage& from) { ClientStreamMessage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ClientStreamMessage* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "ClientStreamMessage"; }

 protected:
  explicit ClientStreamMessage(::google::protobuf::Arena* arena);
  ClientStreamMessage(::google::protobuf::Arena* arena, const ClientStreamMessage& from);
  ClientStreamMessage(::google::protobuf::Arena* arena, ClientStreamMessage&& from) noexcept
      : ClientStreamMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kColorImageFieldNumber = 4,
    kDepthImageFieldNumber = 5,
    kBbox2DFieldNumber = 1,
    kClockFieldNumber = 2,
    kCameraFieldNumber = 3,
  };
  // bytes color_image = 4;
  void clear_color_image() ;
  const std::string& color_image() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_color_image(Arg_&& arg, Args_... args);
  std::string* mutable_color_image();
  PROTOBUF_NODISCARD std::string* release_color_image();
  void set_allocated_color_image(std::string* value);

  private:
  const std::string& _internal_color_image() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_color_image(
      const std::string& value);
  std::string* _internal_mutable_color_image();

  public:
  // bytes depth_image = 5;
  void clear_depth_image() ;
  const std::string& depth_image() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_depth_image(Arg_&& arg, Args_... args);
  std::string* mutable_depth_image();
  PROTOBUF_NODISCARD std::string* release_depth_image();
  void set_allocated_depth_image(std::string* value);

  private:
  const std::string& _internal_depth_image() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_depth_image(
      const std::string& value);
  std::string* _internal_mutable_depth_image();

  public:
  // .BBox2D bbox2d = 1;
  bool has_bbox2d() const;
  void clear_bbox2d() ;
  const ::BBox2D& bbox2d() const;
  PROTOBUF_NODISCARD ::BBox2D* release_bbox2d();
  ::BBox2D* mutable_bbox2d();
  void set_allocated_bbox2d(::BBox2D* value);
  void unsafe_arena_set_allocated_bbox2d(::BBox2D* value);
  ::BBox2D* unsafe_arena_release_bbox2d();

  private:
  const ::BBox2D& _internal_bbox2d() const;
  ::BBox2D* _internal_mutable_bbox2d();

  public:
  // .Clock clock = 2;
  bool has_clock() const;
  void clear_clock() ;
  const ::Clock& clock() const;
  PROTOBUF_NODISCARD ::Clock* release_clock();
  ::Clock* mutable_clock();
  void set_allocated_clock(::Clock* value);
  void unsafe_arena_set_allocated_clock(::Clock* value);
  ::Clock* unsafe_arena_release_clock();

  private:
  const ::Clock& _internal_clock() const;
  ::Clock* _internal_mutable_clock();

  public:
  // .Camera camera = 3;
  bool has_camera() const;
  void clear_camera() ;
  const ::Camera& camera() const;
  PROTOBUF_NODISCARD ::Camera* release_camera();
  ::Camera* mutable_camera();
  void set_allocated_camera(::Camera* value);
  void unsafe_arena_set_allocated_camera(::Camera* value);
  ::Camera* unsafe_arena_release_camera();

  private:
  const ::Camera& _internal_camera() const;
  ::Camera* _internal_mutable_camera();

  public:
  // @@protoc_insertion_point(class_scope:ClientStreamMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 3,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr color_image_;
    ::google::protobuf::internal::ArenaStringPtr depth_image_;
    ::BBox2D* bbox2d_;
    ::Clock* clock_;
    ::Camera* camera_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_client_5fstream_5fmessage_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// BBox2DType

// uint32 semanticId = 1;
inline void BBox2DType::clear_semanticid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.semanticid_ = 0u;
}
inline ::uint32_t BBox2DType::semanticid() const {
  // @@protoc_insertion_point(field_get:BBox2DType.semanticId)
  return _internal_semanticid();
}
inline void BBox2DType::set_semanticid(::uint32_t value) {
  _internal_set_semanticid(value);
  // @@protoc_insertion_point(field_set:BBox2DType.semanticId)
}
inline ::uint32_t BBox2DType::_internal_semanticid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.semanticid_;
}
inline void BBox2DType::_internal_set_semanticid(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.semanticid_ = value;
}

// int32 xMin = 2;
inline void BBox2DType::clear_xmin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.xmin_ = 0;
}
inline ::int32_t BBox2DType::xmin() const {
  // @@protoc_insertion_point(field_get:BBox2DType.xMin)
  return _internal_xmin();
}
inline void BBox2DType::set_xmin(::int32_t value) {
  _internal_set_xmin(value);
  // @@protoc_insertion_point(field_set:BBox2DType.xMin)
}
inline ::int32_t BBox2DType::_internal_xmin() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.xmin_;
}
inline void BBox2DType::_internal_set_xmin(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.xmin_ = value;
}

// int32 yMin = 3;
inline void BBox2DType::clear_ymin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ymin_ = 0;
}
inline ::int32_t BBox2DType::ymin() const {
  // @@protoc_insertion_point(field_get:BBox2DType.yMin)
  return _internal_ymin();
}
inline void BBox2DType::set_ymin(::int32_t value) {
  _internal_set_ymin(value);
  // @@protoc_insertion_point(field_set:BBox2DType.yMin)
}
inline ::int32_t BBox2DType::_internal_ymin() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ymin_;
}
inline void BBox2DType::_internal_set_ymin(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ymin_ = value;
}

// int32 xMax = 4;
inline void BBox2DType::clear_xmax() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.xmax_ = 0;
}
inline ::int32_t BBox2DType::xmax() const {
  // @@protoc_insertion_point(field_get:BBox2DType.xMax)
  return _internal_xmax();
}
inline void BBox2DType::set_xmax(::int32_t value) {
  _internal_set_xmax(value);
  // @@protoc_insertion_point(field_set:BBox2DType.xMax)
}
inline ::int32_t BBox2DType::_internal_xmax() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.xmax_;
}
inline void BBox2DType::_internal_set_xmax(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.xmax_ = value;
}

// int32 yMax = 5;
inline void BBox2DType::clear_ymax() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ymax_ = 0;
}
inline ::int32_t BBox2DType::ymax() const {
  // @@protoc_insertion_point(field_get:BBox2DType.yMax)
  return _internal_ymax();
}
inline void BBox2DType::set_ymax(::int32_t value) {
  _internal_set_ymax(value);
  // @@protoc_insertion_point(field_set:BBox2DType.yMax)
}
inline ::int32_t BBox2DType::_internal_ymax() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ymax_;
}
inline void BBox2DType::_internal_set_ymax(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ymax_ = value;
}

// float occlusionRatio = 6;
inline void BBox2DType::clear_occlusionratio() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.occlusionratio_ = 0;
}
inline float BBox2DType::occlusionratio() const {
  // @@protoc_insertion_point(field_get:BBox2DType.occlusionRatio)
  return _internal_occlusionratio();
}
inline void BBox2DType::set_occlusionratio(float value) {
  _internal_set_occlusionratio(value);
  // @@protoc_insertion_point(field_set:BBox2DType.occlusionRatio)
}
inline float BBox2DType::_internal_occlusionratio() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.occlusionratio_;
}
inline void BBox2DType::_internal_set_occlusionratio(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.occlusionratio_ = value;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// BBox2DInfo

// map<string, string> idToLabels = 1;
inline int BBox2DInfo::_internal_idtolabels_size() const {
  return _internal_idtolabels().size();
}
inline int BBox2DInfo::idtolabels_size() const {
  return _internal_idtolabels_size();
}
inline void BBox2DInfo::clear_idtolabels() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.idtolabels_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& BBox2DInfo::_internal_idtolabels() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.idtolabels_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& BBox2DInfo::idtolabels() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:BBox2DInfo.idToLabels)
  return _internal_idtolabels();
}
inline ::google::protobuf::Map<std::string, std::string>* BBox2DInfo::_internal_mutable_idtolabels() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.idtolabels_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* BBox2DInfo::mutable_idtolabels() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:BBox2DInfo.idToLabels)
  return _internal_mutable_idtolabels();
}

// repeated int32 bboxIds = 2;
inline int BBox2DInfo::_internal_bboxids_size() const {
  return _internal_bboxids().size();
}
inline int BBox2DInfo::bboxids_size() const {
  return _internal_bboxids_size();
}
inline void BBox2DInfo::clear_bboxids() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.bboxids_.Clear();
}
inline ::int32_t BBox2DInfo::bboxids(int index) const {
  // @@protoc_insertion_point(field_get:BBox2DInfo.bboxIds)
  return _internal_bboxids().Get(index);
}
inline void BBox2DInfo::set_bboxids(int index, ::int32_t value) {
  _internal_mutable_bboxids()->Set(index, value);
  // @@protoc_insertion_point(field_set:BBox2DInfo.bboxIds)
}
inline void BBox2DInfo::add_bboxids(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_bboxids()->Add(value);
  // @@protoc_insertion_point(field_add:BBox2DInfo.bboxIds)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& BBox2DInfo::bboxids() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:BBox2DInfo.bboxIds)
  return _internal_bboxids();
}
inline ::google::protobuf::RepeatedField<::int32_t>* BBox2DInfo::mutable_bboxids()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:BBox2DInfo.bboxIds)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_bboxids();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
BBox2DInfo::_internal_bboxids() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.bboxids_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* BBox2DInfo::_internal_mutable_bboxids() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.bboxids_;
}

// -------------------------------------------------------------------

// BBox2D

// repeated .BBox2DType data = 1;
inline int BBox2D::_internal_data_size() const {
  return _internal_data().size();
}
inline int BBox2D::data_size() const {
  return _internal_data_size();
}
inline void BBox2D::clear_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_.Clear();
}
inline ::BBox2DType* BBox2D::mutable_data(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:BBox2D.data)
  return _internal_mutable_data()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::BBox2DType>* BBox2D::mutable_data()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:BBox2D.data)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_data();
}
inline const ::BBox2DType& BBox2D::data(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BBox2D.data)
  return _internal_data().Get(index);
}
inline ::BBox2DType* BBox2D::add_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::BBox2DType* _add = _internal_mutable_data()->Add();
  // @@protoc_insertion_point(field_add:BBox2D.data)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::BBox2DType>& BBox2D::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:BBox2D.data)
  return _internal_data();
}
inline const ::google::protobuf::RepeatedPtrField<::BBox2DType>&
BBox2D::_internal_data() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_;
}
inline ::google::protobuf::RepeatedPtrField<::BBox2DType>*
BBox2D::_internal_mutable_data() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.data_;
}

// .BBox2DInfo info = 2;
inline bool BBox2D::has_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.info_ != nullptr);
  return value;
}
inline void BBox2D::clear_info() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.info_ != nullptr) _impl_.info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::BBox2DInfo& BBox2D::_internal_info() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::BBox2DInfo* p = _impl_.info_;
  return p != nullptr ? *p : reinterpret_cast<const ::BBox2DInfo&>(::_BBox2DInfo_default_instance_);
}
inline const ::BBox2DInfo& BBox2D::info() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BBox2D.info)
  return _internal_info();
}
inline void BBox2D::unsafe_arena_set_allocated_info(::BBox2DInfo* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.info_);
  }
  _impl_.info_ = reinterpret_cast<::BBox2DInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:BBox2D.info)
}
inline ::BBox2DInfo* BBox2D::release_info() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::BBox2DInfo* released = _impl_.info_;
  _impl_.info_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::BBox2DInfo* BBox2D::unsafe_arena_release_info() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:BBox2D.info)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::BBox2DInfo* temp = _impl_.info_;
  _impl_.info_ = nullptr;
  return temp;
}
inline ::BBox2DInfo* BBox2D::_internal_mutable_info() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.info_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::BBox2DInfo>(GetArena());
    _impl_.info_ = reinterpret_cast<::BBox2DInfo*>(p);
  }
  return _impl_.info_;
}
inline ::BBox2DInfo* BBox2D::mutable_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::BBox2DInfo* _msg = _internal_mutable_info();
  // @@protoc_insertion_point(field_mutable:BBox2D.info)
  return _msg;
}
inline void BBox2D::set_allocated_info(::BBox2DInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete (_impl_.info_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.info_ = reinterpret_cast<::BBox2DInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:BBox2D.info)
}

// -------------------------------------------------------------------

// Clock

// double sim_dt = 1;
inline void Clock::clear_sim_dt() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.sim_dt_ = 0;
}
inline double Clock::sim_dt() const {
  // @@protoc_insertion_point(field_get:Clock.sim_dt)
  return _internal_sim_dt();
}
inline void Clock::set_sim_dt(double value) {
  _internal_set_sim_dt(value);
  // @@protoc_insertion_point(field_set:Clock.sim_dt)
}
inline double Clock::_internal_sim_dt() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.sim_dt_;
}
inline void Clock::_internal_set_sim_dt(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.sim_dt_ = value;
}

// double sys_dt = 2;
inline void Clock::clear_sys_dt() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.sys_dt_ = 0;
}
inline double Clock::sys_dt() const {
  // @@protoc_insertion_point(field_get:Clock.sys_dt)
  return _internal_sys_dt();
}
inline void Clock::set_sys_dt(double value) {
  _internal_set_sys_dt(value);
  // @@protoc_insertion_point(field_set:Clock.sys_dt)
}
inline double Clock::_internal_sys_dt() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.sys_dt_;
}
inline void Clock::_internal_set_sys_dt(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.sys_dt_ = value;
}

// double sim_time = 3;
inline void Clock::clear_sim_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.sim_time_ = 0;
}
inline double Clock::sim_time() const {
  // @@protoc_insertion_point(field_get:Clock.sim_time)
  return _internal_sim_time();
}
inline void Clock::set_sim_time(double value) {
  _internal_set_sim_time(value);
  // @@protoc_insertion_point(field_set:Clock.sim_time)
}
inline double Clock::_internal_sim_time() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.sim_time_;
}
inline void Clock::_internal_set_sim_time(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.sim_time_ = value;
}

// double sys_time = 4;
inline void Clock::clear_sys_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.sys_time_ = 0;
}
inline double Clock::sys_time() const {
  // @@protoc_insertion_point(field_get:Clock.sys_time)
  return _internal_sys_time();
}
inline void Clock::set_sys_time(double value) {
  _internal_set_sys_time(value);
  // @@protoc_insertion_point(field_set:Clock.sys_time)
}
inline double Clock::_internal_sys_time() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.sys_time_;
}
inline void Clock::_internal_set_sys_time(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.sys_time_ = value;
}

// -------------------------------------------------------------------

// Camera

// repeated double view_matrix_ros = 1;
inline int Camera::_internal_view_matrix_ros_size() const {
  return _internal_view_matrix_ros().size();
}
inline int Camera::view_matrix_ros_size() const {
  return _internal_view_matrix_ros_size();
}
inline void Camera::clear_view_matrix_ros() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.view_matrix_ros_.Clear();
}
inline double Camera::view_matrix_ros(int index) const {
  // @@protoc_insertion_point(field_get:Camera.view_matrix_ros)
  return _internal_view_matrix_ros().Get(index);
}
inline void Camera::set_view_matrix_ros(int index, double value) {
  _internal_mutable_view_matrix_ros()->Set(index, value);
  // @@protoc_insertion_point(field_set:Camera.view_matrix_ros)
}
inline void Camera::add_view_matrix_ros(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_view_matrix_ros()->Add(value);
  // @@protoc_insertion_point(field_add:Camera.view_matrix_ros)
}
inline const ::google::protobuf::RepeatedField<double>& Camera::view_matrix_ros() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Camera.view_matrix_ros)
  return _internal_view_matrix_ros();
}
inline ::google::protobuf::RepeatedField<double>* Camera::mutable_view_matrix_ros()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Camera.view_matrix_ros)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_view_matrix_ros();
}
inline const ::google::protobuf::RepeatedField<double>&
Camera::_internal_view_matrix_ros() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.view_matrix_ros_;
}
inline ::google::protobuf::RepeatedField<double>* Camera::_internal_mutable_view_matrix_ros() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.view_matrix_ros_;
}

// repeated double camera_scale = 2;
inline int Camera::_internal_camera_scale_size() const {
  return _internal_camera_scale().size();
}
inline int Camera::camera_scale_size() const {
  return _internal_camera_scale_size();
}
inline void Camera::clear_camera_scale() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.camera_scale_.Clear();
}
inline double Camera::camera_scale(int index) const {
  // @@protoc_insertion_point(field_get:Camera.camera_scale)
  return _internal_camera_scale().Get(index);
}
inline void Camera::set_camera_scale(int index, double value) {
  _internal_mutable_camera_scale()->Set(index, value);
  // @@protoc_insertion_point(field_set:Camera.camera_scale)
}
inline void Camera::add_camera_scale(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_camera_scale()->Add(value);
  // @@protoc_insertion_point(field_add:Camera.camera_scale)
}
inline const ::google::protobuf::RepeatedField<double>& Camera::camera_scale() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Camera.camera_scale)
  return _internal_camera_scale();
}
inline ::google::protobuf::RepeatedField<double>* Camera::mutable_camera_scale()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Camera.camera_scale)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_camera_scale();
}
inline const ::google::protobuf::RepeatedField<double>&
Camera::_internal_camera_scale() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.camera_scale_;
}
inline ::google::protobuf::RepeatedField<double>* Camera::_internal_mutable_camera_scale() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.camera_scale_;
}

// repeated double intrinsics_matrix = 3;
inline int Camera::_internal_intrinsics_matrix_size() const {
  return _internal_intrinsics_matrix().size();
}
inline int Camera::intrinsics_matrix_size() const {
  return _internal_intrinsics_matrix_size();
}
inline void Camera::clear_intrinsics_matrix() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.intrinsics_matrix_.Clear();
}
inline double Camera::intrinsics_matrix(int index) const {
  // @@protoc_insertion_point(field_get:Camera.intrinsics_matrix)
  return _internal_intrinsics_matrix().Get(index);
}
inline void Camera::set_intrinsics_matrix(int index, double value) {
  _internal_mutable_intrinsics_matrix()->Set(index, value);
  // @@protoc_insertion_point(field_set:Camera.intrinsics_matrix)
}
inline void Camera::add_intrinsics_matrix(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_intrinsics_matrix()->Add(value);
  // @@protoc_insertion_point(field_add:Camera.intrinsics_matrix)
}
inline const ::google::protobuf::RepeatedField<double>& Camera::intrinsics_matrix() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Camera.intrinsics_matrix)
  return _internal_intrinsics_matrix();
}
inline ::google::protobuf::RepeatedField<double>* Camera::mutable_intrinsics_matrix()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Camera.intrinsics_matrix)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_intrinsics_matrix();
}
inline const ::google::protobuf::RepeatedField<double>&
Camera::_internal_intrinsics_matrix() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.intrinsics_matrix_;
}
inline ::google::protobuf::RepeatedField<double>* Camera::_internal_mutable_intrinsics_matrix() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.intrinsics_matrix_;
}

// -------------------------------------------------------------------

// ClientStreamMessage

// .BBox2D bbox2d = 1;
inline bool ClientStreamMessage::has_bbox2d() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.bbox2d_ != nullptr);
  return value;
}
inline void ClientStreamMessage::clear_bbox2d() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.bbox2d_ != nullptr) _impl_.bbox2d_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::BBox2D& ClientStreamMessage::_internal_bbox2d() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::BBox2D* p = _impl_.bbox2d_;
  return p != nullptr ? *p : reinterpret_cast<const ::BBox2D&>(::_BBox2D_default_instance_);
}
inline const ::BBox2D& ClientStreamMessage::bbox2d() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ClientStreamMessage.bbox2d)
  return _internal_bbox2d();
}
inline void ClientStreamMessage::unsafe_arena_set_allocated_bbox2d(::BBox2D* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.bbox2d_);
  }
  _impl_.bbox2d_ = reinterpret_cast<::BBox2D*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ClientStreamMessage.bbox2d)
}
inline ::BBox2D* ClientStreamMessage::release_bbox2d() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::BBox2D* released = _impl_.bbox2d_;
  _impl_.bbox2d_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::BBox2D* ClientStreamMessage::unsafe_arena_release_bbox2d() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ClientStreamMessage.bbox2d)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::BBox2D* temp = _impl_.bbox2d_;
  _impl_.bbox2d_ = nullptr;
  return temp;
}
inline ::BBox2D* ClientStreamMessage::_internal_mutable_bbox2d() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.bbox2d_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::BBox2D>(GetArena());
    _impl_.bbox2d_ = reinterpret_cast<::BBox2D*>(p);
  }
  return _impl_.bbox2d_;
}
inline ::BBox2D* ClientStreamMessage::mutable_bbox2d() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::BBox2D* _msg = _internal_mutable_bbox2d();
  // @@protoc_insertion_point(field_mutable:ClientStreamMessage.bbox2d)
  return _msg;
}
inline void ClientStreamMessage::set_allocated_bbox2d(::BBox2D* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete (_impl_.bbox2d_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.bbox2d_ = reinterpret_cast<::BBox2D*>(value);
  // @@protoc_insertion_point(field_set_allocated:ClientStreamMessage.bbox2d)
}

// .Clock clock = 2;
inline bool ClientStreamMessage::has_clock() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.clock_ != nullptr);
  return value;
}
inline void ClientStreamMessage::clear_clock() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.clock_ != nullptr) _impl_.clock_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::Clock& ClientStreamMessage::_internal_clock() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::Clock* p = _impl_.clock_;
  return p != nullptr ? *p : reinterpret_cast<const ::Clock&>(::_Clock_default_instance_);
}
inline const ::Clock& ClientStreamMessage::clock() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ClientStreamMessage.clock)
  return _internal_clock();
}
inline void ClientStreamMessage::unsafe_arena_set_allocated_clock(::Clock* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.clock_);
  }
  _impl_.clock_ = reinterpret_cast<::Clock*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ClientStreamMessage.clock)
}
inline ::Clock* ClientStreamMessage::release_clock() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::Clock* released = _impl_.clock_;
  _impl_.clock_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Clock* ClientStreamMessage::unsafe_arena_release_clock() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ClientStreamMessage.clock)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::Clock* temp = _impl_.clock_;
  _impl_.clock_ = nullptr;
  return temp;
}
inline ::Clock* ClientStreamMessage::_internal_mutable_clock() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.clock_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Clock>(GetArena());
    _impl_.clock_ = reinterpret_cast<::Clock*>(p);
  }
  return _impl_.clock_;
}
inline ::Clock* ClientStreamMessage::mutable_clock() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::Clock* _msg = _internal_mutable_clock();
  // @@protoc_insertion_point(field_mutable:ClientStreamMessage.clock)
  return _msg;
}
inline void ClientStreamMessage::set_allocated_clock(::Clock* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete (_impl_.clock_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.clock_ = reinterpret_cast<::Clock*>(value);
  // @@protoc_insertion_point(field_set_allocated:ClientStreamMessage.clock)
}

// .Camera camera = 3;
inline bool ClientStreamMessage::has_camera() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.camera_ != nullptr);
  return value;
}
inline void ClientStreamMessage::clear_camera() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.camera_ != nullptr) _impl_.camera_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::Camera& ClientStreamMessage::_internal_camera() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::Camera* p = _impl_.camera_;
  return p != nullptr ? *p : reinterpret_cast<const ::Camera&>(::_Camera_default_instance_);
}
inline const ::Camera& ClientStreamMessage::camera() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ClientStreamMessage.camera)
  return _internal_camera();
}
inline void ClientStreamMessage::unsafe_arena_set_allocated_camera(::Camera* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.camera_);
  }
  _impl_.camera_ = reinterpret_cast<::Camera*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ClientStreamMessage.camera)
}
inline ::Camera* ClientStreamMessage::release_camera() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::Camera* released = _impl_.camera_;
  _impl_.camera_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Camera* ClientStreamMessage::unsafe_arena_release_camera() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ClientStreamMessage.camera)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::Camera* temp = _impl_.camera_;
  _impl_.camera_ = nullptr;
  return temp;
}
inline ::Camera* ClientStreamMessage::_internal_mutable_camera() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.camera_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Camera>(GetArena());
    _impl_.camera_ = reinterpret_cast<::Camera*>(p);
  }
  return _impl_.camera_;
}
inline ::Camera* ClientStreamMessage::mutable_camera() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::Camera* _msg = _internal_mutable_camera();
  // @@protoc_insertion_point(field_mutable:ClientStreamMessage.camera)
  return _msg;
}
inline void ClientStreamMessage::set_allocated_camera(::Camera* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete (_impl_.camera_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.camera_ = reinterpret_cast<::Camera*>(value);
  // @@protoc_insertion_point(field_set_allocated:ClientStreamMessage.camera)
}

// bytes color_image = 4;
inline void ClientStreamMessage::clear_color_image() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.color_image_.ClearToEmpty();
}
inline const std::string& ClientStreamMessage::color_image() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ClientStreamMessage.color_image)
  return _internal_color_image();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ClientStreamMessage::set_color_image(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.color_image_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ClientStreamMessage.color_image)
}
inline std::string* ClientStreamMessage::mutable_color_image() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_color_image();
  // @@protoc_insertion_point(field_mutable:ClientStreamMessage.color_image)
  return _s;
}
inline const std::string& ClientStreamMessage::_internal_color_image() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.color_image_.Get();
}
inline void ClientStreamMessage::_internal_set_color_image(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.color_image_.Set(value, GetArena());
}
inline std::string* ClientStreamMessage::_internal_mutable_color_image() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.color_image_.Mutable( GetArena());
}
inline std::string* ClientStreamMessage::release_color_image() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ClientStreamMessage.color_image)
  return _impl_.color_image_.Release();
}
inline void ClientStreamMessage::set_allocated_color_image(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.color_image_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.color_image_.IsDefault()) {
          _impl_.color_image_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ClientStreamMessage.color_image)
}

// bytes depth_image = 5;
inline void ClientStreamMessage::clear_depth_image() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.depth_image_.ClearToEmpty();
}
inline const std::string& ClientStreamMessage::depth_image() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ClientStreamMessage.depth_image)
  return _internal_depth_image();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ClientStreamMessage::set_depth_image(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.depth_image_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ClientStreamMessage.depth_image)
}
inline std::string* ClientStreamMessage::mutable_depth_image() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_depth_image();
  // @@protoc_insertion_point(field_mutable:ClientStreamMessage.depth_image)
  return _s;
}
inline const std::string& ClientStreamMessage::_internal_depth_image() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.depth_image_.Get();
}
inline void ClientStreamMessage::_internal_set_depth_image(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.depth_image_.Set(value, GetArena());
}
inline std::string* ClientStreamMessage::_internal_mutable_depth_image() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.depth_image_.Mutable( GetArena());
}
inline std::string* ClientStreamMessage::release_depth_image() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ClientStreamMessage.depth_image)
  return _impl_.depth_image_.Release();
}
inline void ClientStreamMessage::set_allocated_depth_image(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.depth_image_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.depth_image_.IsDefault()) {
          _impl_.depth_image_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ClientStreamMessage.depth_image)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_client_5fstream_5fmessage_2eproto_2epb_2eh
