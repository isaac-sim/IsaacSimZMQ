// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client_stream_message.proto
// Protobuf C++ Version: 5.26.0

#include "client_stream_message.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr Clock::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : sim_dt_{0},
        sys_dt_{0},
        sim_time_{0},
        sys_time_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Clock::Clock(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ClockDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ClockDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ClockDefaultTypeInternal() {}
  union {
    Clock _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ClockDefaultTypeInternal _Clock_default_instance_;

inline constexpr Camera::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : view_matrix_ros_{},
        camera_scale_{},
        intrinsics_matrix_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Camera::Camera(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CameraDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CameraDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CameraDefaultTypeInternal() {}
  union {
    Camera _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CameraDefaultTypeInternal _Camera_default_instance_;

inline constexpr BBox2DType::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : semanticid_{0u},
        xmin_{0},
        ymin_{0},
        xmax_{0},
        ymax_{0},
        occlusionratio_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BBox2DType::BBox2DType(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct BBox2DTypeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BBox2DTypeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BBox2DTypeDefaultTypeInternal() {}
  union {
    BBox2DType _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BBox2DTypeDefaultTypeInternal _BBox2DType_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR BBox2DInfo_IdToLabelsEntry_DoNotUse::BBox2DInfo_IdToLabelsEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct BBox2DInfo_IdToLabelsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BBox2DInfo_IdToLabelsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BBox2DInfo_IdToLabelsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    BBox2DInfo_IdToLabelsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BBox2DInfo_IdToLabelsEntry_DoNotUseDefaultTypeInternal _BBox2DInfo_IdToLabelsEntry_DoNotUse_default_instance_;

inline constexpr BBox2DInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : idtolabels_{},
        bboxids_{},
        _bboxids_cached_byte_size_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BBox2DInfo::BBox2DInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct BBox2DInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BBox2DInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BBox2DInfoDefaultTypeInternal() {}
  union {
    BBox2DInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BBox2DInfoDefaultTypeInternal _BBox2DInfo_default_instance_;

inline constexpr BBox2D::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        data_{},
        info_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR BBox2D::BBox2D(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct BBox2DDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BBox2DDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BBox2DDefaultTypeInternal() {}
  union {
    BBox2D _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BBox2DDefaultTypeInternal _BBox2D_default_instance_;

inline constexpr ClientStreamMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        color_image_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        depth_image_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        bbox2d_{nullptr},
        clock_{nullptr},
        camera_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ClientStreamMessage::ClientStreamMessage(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ClientStreamMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ClientStreamMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ClientStreamMessageDefaultTypeInternal() {}
  union {
    ClientStreamMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ClientStreamMessageDefaultTypeInternal _ClientStreamMessage_default_instance_;
static ::_pb::Metadata file_level_metadata_client_5fstream_5fmessage_2eproto[7];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_client_5fstream_5fmessage_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_client_5fstream_5fmessage_2eproto = nullptr;
const ::uint32_t
    TableStruct_client_5fstream_5fmessage_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::BBox2DType, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::BBox2DType, _impl_.semanticid_),
        PROTOBUF_FIELD_OFFSET(::BBox2DType, _impl_.xmin_),
        PROTOBUF_FIELD_OFFSET(::BBox2DType, _impl_.ymin_),
        PROTOBUF_FIELD_OFFSET(::BBox2DType, _impl_.xmax_),
        PROTOBUF_FIELD_OFFSET(::BBox2DType, _impl_.ymax_),
        PROTOBUF_FIELD_OFFSET(::BBox2DType, _impl_.occlusionratio_),
        PROTOBUF_FIELD_OFFSET(::BBox2DInfo_IdToLabelsEntry_DoNotUse, _has_bits_),
        PROTOBUF_FIELD_OFFSET(::BBox2DInfo_IdToLabelsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::BBox2DInfo_IdToLabelsEntry_DoNotUse, key_),
        PROTOBUF_FIELD_OFFSET(::BBox2DInfo_IdToLabelsEntry_DoNotUse, value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::BBox2DInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::BBox2DInfo, _impl_.idtolabels_),
        PROTOBUF_FIELD_OFFSET(::BBox2DInfo, _impl_.bboxids_),
        PROTOBUF_FIELD_OFFSET(::BBox2D, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::BBox2D, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::BBox2D, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::BBox2D, _impl_.info_),
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::Clock, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Clock, _impl_.sim_dt_),
        PROTOBUF_FIELD_OFFSET(::Clock, _impl_.sys_dt_),
        PROTOBUF_FIELD_OFFSET(::Clock, _impl_.sim_time_),
        PROTOBUF_FIELD_OFFSET(::Clock, _impl_.sys_time_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::Camera, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Camera, _impl_.view_matrix_ros_),
        PROTOBUF_FIELD_OFFSET(::Camera, _impl_.camera_scale_),
        PROTOBUF_FIELD_OFFSET(::Camera, _impl_.intrinsics_matrix_),
        PROTOBUF_FIELD_OFFSET(::ClientStreamMessage, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::ClientStreamMessage, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ClientStreamMessage, _impl_.bbox2d_),
        PROTOBUF_FIELD_OFFSET(::ClientStreamMessage, _impl_.clock_),
        PROTOBUF_FIELD_OFFSET(::ClientStreamMessage, _impl_.camera_),
        PROTOBUF_FIELD_OFFSET(::ClientStreamMessage, _impl_.color_image_),
        PROTOBUF_FIELD_OFFSET(::ClientStreamMessage, _impl_.depth_image_),
        0,
        1,
        2,
        ~0u,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::BBox2DType)},
        {14, 24, -1, sizeof(::BBox2DInfo_IdToLabelsEntry_DoNotUse)},
        {26, -1, -1, sizeof(::BBox2DInfo)},
        {36, 46, -1, sizeof(::BBox2D)},
        {48, -1, -1, sizeof(::Clock)},
        {60, -1, -1, sizeof(::Camera)},
        {71, 84, -1, sizeof(::ClientStreamMessage)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::_BBox2DType_default_instance_._instance,
    &::_BBox2DInfo_IdToLabelsEntry_DoNotUse_default_instance_._instance,
    &::_BBox2DInfo_default_instance_._instance,
    &::_BBox2D_default_instance_._instance,
    &::_Clock_default_instance_._instance,
    &::_Camera_default_instance_._instance,
    &::_ClientStreamMessage_default_instance_._instance,
};
const char descriptor_table_protodef_client_5fstream_5fmessage_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\033client_stream_message.proto\"p\n\nBBox2DT"
    "ype\022\022\n\nsemanticId\030\001 \001(\r\022\014\n\004xMin\030\002 \001(\005\022\014\n"
    "\004yMin\030\003 \001(\005\022\014\n\004xMax\030\004 \001(\005\022\014\n\004yMax\030\005 \001(\005\022"
    "\026\n\016occlusionRatio\030\006 \001(\002\"\201\001\n\nBBox2DInfo\022/"
    "\n\nidToLabels\030\001 \003(\0132\033.BBox2DInfo.IdToLabe"
    "lsEntry\022\017\n\007bboxIds\030\002 \003(\005\0321\n\017IdToLabelsEn"
    "try\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\">\n\006B"
    "Box2D\022\031\n\004data\030\001 \003(\0132\013.BBox2DType\022\031\n\004info"
    "\030\002 \001(\0132\013.BBox2DInfo\"K\n\005Clock\022\016\n\006sim_dt\030\001"
    " \001(\001\022\016\n\006sys_dt\030\002 \001(\001\022\020\n\010sim_time\030\003 \001(\001\022\020"
    "\n\010sys_time\030\004 \001(\001\"R\n\006Camera\022\027\n\017view_matri"
    "x_ros\030\001 \003(\001\022\024\n\014camera_scale\030\002 \003(\001\022\031\n\021int"
    "rinsics_matrix\030\003 \003(\001\"\210\001\n\023ClientStreamMes"
    "sage\022\027\n\006bbox2d\030\001 \001(\0132\007.BBox2D\022\025\n\005clock\030\002"
    " \001(\0132\006.Clock\022\027\n\006camera\030\003 \001(\0132\007.Camera\022\023\n"
    "\013color_image\030\004 \001(\014\022\023\n\013depth_image\030\005 \001(\014b"
    "\006proto3"
};
static ::absl::once_flag descriptor_table_client_5fstream_5fmessage_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_client_5fstream_5fmessage_2eproto = {
    false,
    false,
    647,
    descriptor_table_protodef_client_5fstream_5fmessage_2eproto,
    "client_stream_message.proto",
    &descriptor_table_client_5fstream_5fmessage_2eproto_once,
    nullptr,
    0,
    7,
    schemas,
    file_default_instances,
    TableStruct_client_5fstream_5fmessage_2eproto::offsets,
    file_level_metadata_client_5fstream_5fmessage_2eproto,
    file_level_enum_descriptors_client_5fstream_5fmessage_2eproto,
    file_level_service_descriptors_client_5fstream_5fmessage_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_client_5fstream_5fmessage_2eproto_getter() {
  return &descriptor_table_client_5fstream_5fmessage_2eproto;
}
// ===================================================================

class BBox2DType::_Internal {
 public:
};

BBox2DType::BBox2DType(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:BBox2DType)
}
BBox2DType::BBox2DType(
    ::google::protobuf::Arena* arena, const BBox2DType& from)
    : BBox2DType(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE BBox2DType::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void BBox2DType::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, semanticid_),
           0,
           offsetof(Impl_, occlusionratio_) -
               offsetof(Impl_, semanticid_) +
               sizeof(Impl_::occlusionratio_));
}
BBox2DType::~BBox2DType() {
  // @@protoc_insertion_point(destructor:BBox2DType)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BBox2DType::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
BBox2DType::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(BBox2DType, _impl_._cached_size_),
              false,
          },
          &BBox2DType::MergeImpl,
          &BBox2DType::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void BBox2DType::Clear() {
// @@protoc_insertion_point(message_clear_start:BBox2DType)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.semanticid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.occlusionratio_) -
      reinterpret_cast<char*>(&_impl_.semanticid_)) + sizeof(_impl_.occlusionratio_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* BBox2DType::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 0, 2> BBox2DType::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_BBox2DType_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::BBox2DType>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 semanticId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BBox2DType, _impl_.semanticid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(BBox2DType, _impl_.semanticid_)}},
    // int32 xMin = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BBox2DType, _impl_.xmin_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(BBox2DType, _impl_.xmin_)}},
    // int32 yMin = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BBox2DType, _impl_.ymin_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(BBox2DType, _impl_.ymin_)}},
    // int32 xMax = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BBox2DType, _impl_.xmax_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(BBox2DType, _impl_.xmax_)}},
    // int32 yMax = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BBox2DType, _impl_.ymax_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(BBox2DType, _impl_.ymax_)}},
    // float occlusionRatio = 6;
    {::_pbi::TcParser::FastF32S1,
     {53, 63, 0, PROTOBUF_FIELD_OFFSET(BBox2DType, _impl_.occlusionratio_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 semanticId = 1;
    {PROTOBUF_FIELD_OFFSET(BBox2DType, _impl_.semanticid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // int32 xMin = 2;
    {PROTOBUF_FIELD_OFFSET(BBox2DType, _impl_.xmin_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 yMin = 3;
    {PROTOBUF_FIELD_OFFSET(BBox2DType, _impl_.ymin_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 xMax = 4;
    {PROTOBUF_FIELD_OFFSET(BBox2DType, _impl_.xmax_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 yMax = 5;
    {PROTOBUF_FIELD_OFFSET(BBox2DType, _impl_.ymax_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // float occlusionRatio = 6;
    {PROTOBUF_FIELD_OFFSET(BBox2DType, _impl_.occlusionratio_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* BBox2DType::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:BBox2DType)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 semanticId = 1;
  if (this->_internal_semanticid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_semanticid(), target);
  }

  // int32 xMin = 2;
  if (this->_internal_xmin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_xmin(), target);
  }

  // int32 yMin = 3;
  if (this->_internal_ymin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_ymin(), target);
  }

  // int32 xMax = 4;
  if (this->_internal_xmax() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_xmax(), target);
  }

  // int32 yMax = 5;
  if (this->_internal_ymax() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_ymax(), target);
  }

  // float occlusionRatio = 6;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_occlusionratio = this->_internal_occlusionratio();
  ::uint32_t raw_occlusionratio;
  memcpy(&raw_occlusionratio, &tmp_occlusionratio, sizeof(tmp_occlusionratio));
  if (raw_occlusionratio != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        6, this->_internal_occlusionratio(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BBox2DType)
  return target;
}

::size_t BBox2DType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BBox2DType)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 semanticId = 1;
  if (this->_internal_semanticid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_semanticid());
  }

  // int32 xMin = 2;
  if (this->_internal_xmin() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_xmin());
  }

  // int32 yMin = 3;
  if (this->_internal_ymin() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_ymin());
  }

  // int32 xMax = 4;
  if (this->_internal_xmax() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_xmax());
  }

  // int32 yMax = 5;
  if (this->_internal_ymax() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_ymax());
  }

  // float occlusionRatio = 6;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_occlusionratio = this->_internal_occlusionratio();
  ::uint32_t raw_occlusionratio;
  memcpy(&raw_occlusionratio, &tmp_occlusionratio, sizeof(tmp_occlusionratio));
  if (raw_occlusionratio != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void BBox2DType::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BBox2DType*>(&to_msg);
  auto& from = static_cast<const BBox2DType&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:BBox2DType)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_semanticid() != 0) {
    _this->_impl_.semanticid_ = from._impl_.semanticid_;
  }
  if (from._internal_xmin() != 0) {
    _this->_impl_.xmin_ = from._impl_.xmin_;
  }
  if (from._internal_ymin() != 0) {
    _this->_impl_.ymin_ = from._impl_.ymin_;
  }
  if (from._internal_xmax() != 0) {
    _this->_impl_.xmax_ = from._impl_.xmax_;
  }
  if (from._internal_ymax() != 0) {
    _this->_impl_.ymax_ = from._impl_.ymax_;
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_occlusionratio = from._internal_occlusionratio();
  ::uint32_t raw_occlusionratio;
  memcpy(&raw_occlusionratio, &tmp_occlusionratio, sizeof(tmp_occlusionratio));
  if (raw_occlusionratio != 0) {
    _this->_impl_.occlusionratio_ = from._impl_.occlusionratio_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BBox2DType::CopyFrom(const BBox2DType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BBox2DType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool BBox2DType::IsInitialized() const {
  return true;
}

void BBox2DType::InternalSwap(BBox2DType* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BBox2DType, _impl_.occlusionratio_)
      + sizeof(BBox2DType::_impl_.occlusionratio_)
      - PROTOBUF_FIELD_OFFSET(BBox2DType, _impl_.semanticid_)>(
          reinterpret_cast<char*>(&_impl_.semanticid_),
          reinterpret_cast<char*>(&other->_impl_.semanticid_));
}

::google::protobuf::Metadata BBox2DType::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_client_5fstream_5fmessage_2eproto_getter,
                                   &descriptor_table_client_5fstream_5fmessage_2eproto_once,
                                   file_level_metadata_client_5fstream_5fmessage_2eproto[0]);
}
// ===================================================================

BBox2DInfo_IdToLabelsEntry_DoNotUse::BBox2DInfo_IdToLabelsEntry_DoNotUse() {}
BBox2DInfo_IdToLabelsEntry_DoNotUse::BBox2DInfo_IdToLabelsEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata BBox2DInfo_IdToLabelsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_client_5fstream_5fmessage_2eproto_getter,
                                   &descriptor_table_client_5fstream_5fmessage_2eproto_once,
                                   file_level_metadata_client_5fstream_5fmessage_2eproto[1]);
}
// ===================================================================

class BBox2DInfo::_Internal {
 public:
};

BBox2DInfo::BBox2DInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:BBox2DInfo)
}
inline PROTOBUF_NDEBUG_INLINE BBox2DInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : idtolabels_{visibility, arena, from.idtolabels_},
        bboxids_{visibility, arena, from.bboxids_},
        _bboxids_cached_byte_size_{0},
        _cached_size_{0} {}

BBox2DInfo::BBox2DInfo(
    ::google::protobuf::Arena* arena,
    const BBox2DInfo& from)
    : ::google::protobuf::Message(arena) {
  BBox2DInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:BBox2DInfo)
}
inline PROTOBUF_NDEBUG_INLINE BBox2DInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : idtolabels_{visibility, arena},
        bboxids_{visibility, arena},
        _bboxids_cached_byte_size_{0},
        _cached_size_{0} {}

inline void BBox2DInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
BBox2DInfo::~BBox2DInfo() {
  // @@protoc_insertion_point(destructor:BBox2DInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BBox2DInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
BBox2DInfo::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(BBox2DInfo, _impl_._cached_size_),
              false,
          },
          &BBox2DInfo::MergeImpl,
          &BBox2DInfo::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void BBox2DInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:BBox2DInfo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.idtolabels_.Clear();
  _impl_.bboxids_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* BBox2DInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 1, 29, 2> BBox2DInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_BBox2DInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::BBox2DInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated int32 bboxIds = 2;
    {::_pbi::TcParser::FastV32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(BBox2DInfo, _impl_.bboxids_)}},
  }}, {{
    65535, 65535
  }}, {{
    // map<string, string> idToLabels = 1;
    {PROTOBUF_FIELD_OFFSET(BBox2DInfo, _impl_.idtolabels_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // repeated int32 bboxIds = 2;
    {PROTOBUF_FIELD_OFFSET(BBox2DInfo, _impl_.bboxids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(BBox2DInfo()._impl_.idtolabels_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\12\12\0\0\0\0\0\0"
    "BBox2DInfo"
    "idToLabels"
  }},
};

::uint8_t* BBox2DInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:BBox2DInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // map<string, string> idToLabels = 1;
  if (!_internal_idtolabels().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = _internal_idtolabels();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            1, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "BBox2DInfo.idToLabels");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "BBox2DInfo.idToLabels");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            1, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "BBox2DInfo.idToLabels");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "BBox2DInfo.idToLabels");
      }
    }
  }

  // repeated int32 bboxIds = 2;
  {
    int byte_size = _impl_._bboxids_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          2, _internal_bboxids(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BBox2DInfo)
  return target;
}

::size_t BBox2DInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BBox2DInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> idToLabels = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_idtolabels_size());
  for (const auto& entry : _internal_idtolabels()) {
    total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
  }
  // repeated int32 bboxIds = 2;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_bboxids())
    ;
    _impl_._bboxids_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void BBox2DInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BBox2DInfo*>(&to_msg);
  auto& from = static_cast<const BBox2DInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:BBox2DInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.idtolabels_.MergeFrom(from._impl_.idtolabels_);
  _this->_internal_mutable_bboxids()->MergeFrom(from._internal_bboxids());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BBox2DInfo::CopyFrom(const BBox2DInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BBox2DInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool BBox2DInfo::IsInitialized() const {
  return true;
}

void BBox2DInfo::InternalSwap(BBox2DInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.idtolabels_.InternalSwap(&other->_impl_.idtolabels_);
  _impl_.bboxids_.InternalSwap(&other->_impl_.bboxids_);
}

::google::protobuf::Metadata BBox2DInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_client_5fstream_5fmessage_2eproto_getter,
                                   &descriptor_table_client_5fstream_5fmessage_2eproto_once,
                                   file_level_metadata_client_5fstream_5fmessage_2eproto[2]);
}
// ===================================================================

class BBox2D::_Internal {
 public:
  using HasBits = decltype(std::declval<BBox2D>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(BBox2D, _impl_._has_bits_);
};

BBox2D::BBox2D(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:BBox2D)
}
inline PROTOBUF_NDEBUG_INLINE BBox2D::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        data_{visibility, arena, from.data_} {}

BBox2D::BBox2D(
    ::google::protobuf::Arena* arena,
    const BBox2D& from)
    : ::google::protobuf::Message(arena) {
  BBox2D* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.info_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::BBox2DInfo>(
                              arena, *from._impl_.info_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:BBox2D)
}
inline PROTOBUF_NDEBUG_INLINE BBox2D::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        data_{visibility, arena} {}

inline void BBox2D::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.info_ = {};
}
BBox2D::~BBox2D() {
  // @@protoc_insertion_point(destructor:BBox2D)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BBox2D::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.info_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
BBox2D::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(BBox2D, _impl_._cached_size_),
              false,
          },
          &BBox2D::MergeImpl,
          &BBox2D::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void BBox2D::Clear() {
// @@protoc_insertion_point(message_clear_start:BBox2D)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.info_ != nullptr);
    _impl_.info_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* BBox2D::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> BBox2D::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BBox2D, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_BBox2D_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::BBox2D>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .BBox2DInfo info = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 1, PROTOBUF_FIELD_OFFSET(BBox2D, _impl_.info_)}},
    // repeated .BBox2DType data = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(BBox2D, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .BBox2DType data = 1;
    {PROTOBUF_FIELD_OFFSET(BBox2D, _impl_.data_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .BBox2DInfo info = 2;
    {PROTOBUF_FIELD_OFFSET(BBox2D, _impl_.info_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::BBox2DType>()},
    {::_pbi::TcParser::GetTable<::BBox2DInfo>()},
  }}, {{
  }},
};

::uint8_t* BBox2D::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:BBox2D)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .BBox2DType data = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_data_size());
       i < n; i++) {
    const auto& repfield = this->_internal_data().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .BBox2DInfo info = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.info_, _impl_.info_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BBox2D)
  return target;
}

::size_t BBox2D::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BBox2D)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .BBox2DType data = 1;
  total_size += 1UL * this->_internal_data_size();
  for (const auto& msg : this->_internal_data()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .BBox2DInfo info = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.info_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void BBox2D::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BBox2D*>(&to_msg);
  auto& from = static_cast<const BBox2D&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:BBox2D)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_data()->MergeFrom(
      from._internal_data());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.info_ != nullptr);
    if (_this->_impl_.info_ == nullptr) {
      _this->_impl_.info_ =
          ::google::protobuf::Message::CopyConstruct<::BBox2DInfo>(arena, *from._impl_.info_);
    } else {
      _this->_impl_.info_->MergeFrom(*from._impl_.info_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BBox2D::CopyFrom(const BBox2D& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BBox2D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool BBox2D::IsInitialized() const {
  return true;
}

void BBox2D::InternalSwap(BBox2D* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.data_.InternalSwap(&other->_impl_.data_);
  swap(_impl_.info_, other->_impl_.info_);
}

::google::protobuf::Metadata BBox2D::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_client_5fstream_5fmessage_2eproto_getter,
                                   &descriptor_table_client_5fstream_5fmessage_2eproto_once,
                                   file_level_metadata_client_5fstream_5fmessage_2eproto[3]);
}
// ===================================================================

class Clock::_Internal {
 public:
};

Clock::Clock(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Clock)
}
Clock::Clock(
    ::google::protobuf::Arena* arena, const Clock& from)
    : Clock(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Clock::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Clock::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, sim_dt_),
           0,
           offsetof(Impl_, sys_time_) -
               offsetof(Impl_, sim_dt_) +
               sizeof(Impl_::sys_time_));
}
Clock::~Clock() {
  // @@protoc_insertion_point(destructor:Clock)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Clock::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Clock::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Clock, _impl_._cached_size_),
              false,
          },
          &Clock::MergeImpl,
          &Clock::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void Clock::Clear() {
// @@protoc_insertion_point(message_clear_start:Clock)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.sim_dt_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.sys_time_) -
      reinterpret_cast<char*>(&_impl_.sim_dt_)) + sizeof(_impl_.sys_time_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Clock::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> Clock::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Clock_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Clock>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double sys_time = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 63, 0, PROTOBUF_FIELD_OFFSET(Clock, _impl_.sys_time_)}},
    // double sim_dt = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(Clock, _impl_.sim_dt_)}},
    // double sys_dt = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(Clock, _impl_.sys_dt_)}},
    // double sim_time = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(Clock, _impl_.sim_time_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double sim_dt = 1;
    {PROTOBUF_FIELD_OFFSET(Clock, _impl_.sim_dt_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double sys_dt = 2;
    {PROTOBUF_FIELD_OFFSET(Clock, _impl_.sys_dt_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double sim_time = 3;
    {PROTOBUF_FIELD_OFFSET(Clock, _impl_.sim_time_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double sys_time = 4;
    {PROTOBUF_FIELD_OFFSET(Clock, _impl_.sys_time_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Clock::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Clock)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double sim_dt = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_sim_dt = this->_internal_sim_dt();
  ::uint64_t raw_sim_dt;
  memcpy(&raw_sim_dt, &tmp_sim_dt, sizeof(tmp_sim_dt));
  if (raw_sim_dt != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        1, this->_internal_sim_dt(), target);
  }

  // double sys_dt = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_sys_dt = this->_internal_sys_dt();
  ::uint64_t raw_sys_dt;
  memcpy(&raw_sys_dt, &tmp_sys_dt, sizeof(tmp_sys_dt));
  if (raw_sys_dt != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_sys_dt(), target);
  }

  // double sim_time = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_sim_time = this->_internal_sim_time();
  ::uint64_t raw_sim_time;
  memcpy(&raw_sim_time, &tmp_sim_time, sizeof(tmp_sim_time));
  if (raw_sim_time != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        3, this->_internal_sim_time(), target);
  }

  // double sys_time = 4;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_sys_time = this->_internal_sys_time();
  ::uint64_t raw_sys_time;
  memcpy(&raw_sys_time, &tmp_sys_time, sizeof(tmp_sys_time));
  if (raw_sys_time != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        4, this->_internal_sys_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Clock)
  return target;
}

::size_t Clock::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Clock)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double sim_dt = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_sim_dt = this->_internal_sim_dt();
  ::uint64_t raw_sim_dt;
  memcpy(&raw_sim_dt, &tmp_sim_dt, sizeof(tmp_sim_dt));
  if (raw_sim_dt != 0) {
    total_size += 9;
  }

  // double sys_dt = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_sys_dt = this->_internal_sys_dt();
  ::uint64_t raw_sys_dt;
  memcpy(&raw_sys_dt, &tmp_sys_dt, sizeof(tmp_sys_dt));
  if (raw_sys_dt != 0) {
    total_size += 9;
  }

  // double sim_time = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_sim_time = this->_internal_sim_time();
  ::uint64_t raw_sim_time;
  memcpy(&raw_sim_time, &tmp_sim_time, sizeof(tmp_sim_time));
  if (raw_sim_time != 0) {
    total_size += 9;
  }

  // double sys_time = 4;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_sys_time = this->_internal_sys_time();
  ::uint64_t raw_sys_time;
  memcpy(&raw_sys_time, &tmp_sys_time, sizeof(tmp_sys_time));
  if (raw_sys_time != 0) {
    total_size += 9;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Clock::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Clock*>(&to_msg);
  auto& from = static_cast<const Clock&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Clock)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_sim_dt = from._internal_sim_dt();
  ::uint64_t raw_sim_dt;
  memcpy(&raw_sim_dt, &tmp_sim_dt, sizeof(tmp_sim_dt));
  if (raw_sim_dt != 0) {
    _this->_impl_.sim_dt_ = from._impl_.sim_dt_;
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_sys_dt = from._internal_sys_dt();
  ::uint64_t raw_sys_dt;
  memcpy(&raw_sys_dt, &tmp_sys_dt, sizeof(tmp_sys_dt));
  if (raw_sys_dt != 0) {
    _this->_impl_.sys_dt_ = from._impl_.sys_dt_;
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_sim_time = from._internal_sim_time();
  ::uint64_t raw_sim_time;
  memcpy(&raw_sim_time, &tmp_sim_time, sizeof(tmp_sim_time));
  if (raw_sim_time != 0) {
    _this->_impl_.sim_time_ = from._impl_.sim_time_;
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_sys_time = from._internal_sys_time();
  ::uint64_t raw_sys_time;
  memcpy(&raw_sys_time, &tmp_sys_time, sizeof(tmp_sys_time));
  if (raw_sys_time != 0) {
    _this->_impl_.sys_time_ = from._impl_.sys_time_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Clock::CopyFrom(const Clock& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Clock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Clock::IsInitialized() const {
  return true;
}

void Clock::InternalSwap(Clock* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Clock, _impl_.sys_time_)
      + sizeof(Clock::_impl_.sys_time_)
      - PROTOBUF_FIELD_OFFSET(Clock, _impl_.sim_dt_)>(
          reinterpret_cast<char*>(&_impl_.sim_dt_),
          reinterpret_cast<char*>(&other->_impl_.sim_dt_));
}

::google::protobuf::Metadata Clock::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_client_5fstream_5fmessage_2eproto_getter,
                                   &descriptor_table_client_5fstream_5fmessage_2eproto_once,
                                   file_level_metadata_client_5fstream_5fmessage_2eproto[4]);
}
// ===================================================================

class Camera::_Internal {
 public:
};

Camera::Camera(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Camera)
}
inline PROTOBUF_NDEBUG_INLINE Camera::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : view_matrix_ros_{visibility, arena, from.view_matrix_ros_},
        camera_scale_{visibility, arena, from.camera_scale_},
        intrinsics_matrix_{visibility, arena, from.intrinsics_matrix_},
        _cached_size_{0} {}

Camera::Camera(
    ::google::protobuf::Arena* arena,
    const Camera& from)
    : ::google::protobuf::Message(arena) {
  Camera* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:Camera)
}
inline PROTOBUF_NDEBUG_INLINE Camera::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : view_matrix_ros_{visibility, arena},
        camera_scale_{visibility, arena},
        intrinsics_matrix_{visibility, arena},
        _cached_size_{0} {}

inline void Camera::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Camera::~Camera() {
  // @@protoc_insertion_point(destructor:Camera)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Camera::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Camera::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Camera, _impl_._cached_size_),
              false,
          },
          &Camera::MergeImpl,
          &Camera::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void Camera::Clear() {
// @@protoc_insertion_point(message_clear_start:Camera)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.view_matrix_ros_.Clear();
  _impl_.camera_scale_.Clear();
  _impl_.intrinsics_matrix_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Camera::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> Camera::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Camera_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Camera>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated double view_matrix_ros = 1;
    {::_pbi::TcParser::FastF64P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Camera, _impl_.view_matrix_ros_)}},
    // repeated double camera_scale = 2;
    {::_pbi::TcParser::FastF64P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Camera, _impl_.camera_scale_)}},
    // repeated double intrinsics_matrix = 3;
    {::_pbi::TcParser::FastF64P1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Camera, _impl_.intrinsics_matrix_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated double view_matrix_ros = 1;
    {PROTOBUF_FIELD_OFFSET(Camera, _impl_.view_matrix_ros_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // repeated double camera_scale = 2;
    {PROTOBUF_FIELD_OFFSET(Camera, _impl_.camera_scale_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // repeated double intrinsics_matrix = 3;
    {PROTOBUF_FIELD_OFFSET(Camera, _impl_.intrinsics_matrix_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Camera::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Camera)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated double view_matrix_ros = 1;
  if (this->_internal_view_matrix_ros_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_view_matrix_ros(), target);
  }

  // repeated double camera_scale = 2;
  if (this->_internal_camera_scale_size() > 0) {
    target = stream->WriteFixedPacked(2, _internal_camera_scale(), target);
  }

  // repeated double intrinsics_matrix = 3;
  if (this->_internal_intrinsics_matrix_size() > 0) {
    target = stream->WriteFixedPacked(3, _internal_intrinsics_matrix(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Camera)
  return target;
}

::size_t Camera::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Camera)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated double view_matrix_ros = 1;
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_view_matrix_ros_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated double camera_scale = 2;
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_camera_scale_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated double intrinsics_matrix = 3;
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_intrinsics_matrix_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Camera::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Camera*>(&to_msg);
  auto& from = static_cast<const Camera&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Camera)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_view_matrix_ros()->MergeFrom(from._internal_view_matrix_ros());
  _this->_internal_mutable_camera_scale()->MergeFrom(from._internal_camera_scale());
  _this->_internal_mutable_intrinsics_matrix()->MergeFrom(from._internal_intrinsics_matrix());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Camera::CopyFrom(const Camera& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Camera)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Camera::IsInitialized() const {
  return true;
}

void Camera::InternalSwap(Camera* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.view_matrix_ros_.InternalSwap(&other->_impl_.view_matrix_ros_);
  _impl_.camera_scale_.InternalSwap(&other->_impl_.camera_scale_);
  _impl_.intrinsics_matrix_.InternalSwap(&other->_impl_.intrinsics_matrix_);
}

::google::protobuf::Metadata Camera::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_client_5fstream_5fmessage_2eproto_getter,
                                   &descriptor_table_client_5fstream_5fmessage_2eproto_once,
                                   file_level_metadata_client_5fstream_5fmessage_2eproto[5]);
}
// ===================================================================

class ClientStreamMessage::_Internal {
 public:
  using HasBits = decltype(std::declval<ClientStreamMessage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ClientStreamMessage, _impl_._has_bits_);
};

ClientStreamMessage::ClientStreamMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientStreamMessage)
}
inline PROTOBUF_NDEBUG_INLINE ClientStreamMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        color_image_(arena, from.color_image_),
        depth_image_(arena, from.depth_image_) {}

ClientStreamMessage::ClientStreamMessage(
    ::google::protobuf::Arena* arena,
    const ClientStreamMessage& from)
    : ::google::protobuf::Message(arena) {
  ClientStreamMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.bbox2d_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::BBox2D>(
                              arena, *from._impl_.bbox2d_)
                        : nullptr;
  _impl_.clock_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::Clock>(
                              arena, *from._impl_.clock_)
                        : nullptr;
  _impl_.camera_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::Camera>(
                              arena, *from._impl_.camera_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:ClientStreamMessage)
}
inline PROTOBUF_NDEBUG_INLINE ClientStreamMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        color_image_(arena),
        depth_image_(arena) {}

inline void ClientStreamMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, bbox2d_),
           0,
           offsetof(Impl_, camera_) -
               offsetof(Impl_, bbox2d_) +
               sizeof(Impl_::camera_));
}
ClientStreamMessage::~ClientStreamMessage() {
  // @@protoc_insertion_point(destructor:ClientStreamMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ClientStreamMessage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.color_image_.Destroy();
  _impl_.depth_image_.Destroy();
  delete _impl_.bbox2d_;
  delete _impl_.clock_;
  delete _impl_.camera_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
ClientStreamMessage::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(ClientStreamMessage, _impl_._cached_size_),
              false,
          },
          &ClientStreamMessage::MergeImpl,
          &ClientStreamMessage::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void ClientStreamMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientStreamMessage)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.color_image_.ClearToEmpty();
  _impl_.depth_image_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.bbox2d_ != nullptr);
      _impl_.bbox2d_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.clock_ != nullptr);
      _impl_.clock_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.camera_ != nullptr);
      _impl_.camera_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ClientStreamMessage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 3, 0, 2> ClientStreamMessage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ClientStreamMessage, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ClientStreamMessage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ClientStreamMessage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .BBox2D bbox2d = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ClientStreamMessage, _impl_.bbox2d_)}},
    // .Clock clock = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(ClientStreamMessage, _impl_.clock_)}},
    // .Camera camera = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(ClientStreamMessage, _impl_.camera_)}},
    // bytes color_image = 4;
    {::_pbi::TcParser::FastBS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(ClientStreamMessage, _impl_.color_image_)}},
    // bytes depth_image = 5;
    {::_pbi::TcParser::FastBS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(ClientStreamMessage, _impl_.depth_image_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .BBox2D bbox2d = 1;
    {PROTOBUF_FIELD_OFFSET(ClientStreamMessage, _impl_.bbox2d_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .Clock clock = 2;
    {PROTOBUF_FIELD_OFFSET(ClientStreamMessage, _impl_.clock_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .Camera camera = 3;
    {PROTOBUF_FIELD_OFFSET(ClientStreamMessage, _impl_.camera_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bytes color_image = 4;
    {PROTOBUF_FIELD_OFFSET(ClientStreamMessage, _impl_.color_image_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes depth_image = 5;
    {PROTOBUF_FIELD_OFFSET(ClientStreamMessage, _impl_.depth_image_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::BBox2D>()},
    {::_pbi::TcParser::GetTable<::Clock>()},
    {::_pbi::TcParser::GetTable<::Camera>()},
  }}, {{
  }},
};

::uint8_t* ClientStreamMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientStreamMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .BBox2D bbox2d = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.bbox2d_, _impl_.bbox2d_->GetCachedSize(), target, stream);
  }

  // .Clock clock = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.clock_, _impl_.clock_->GetCachedSize(), target, stream);
  }

  // .Camera camera = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.camera_, _impl_.camera_->GetCachedSize(), target, stream);
  }

  // bytes color_image = 4;
  if (!this->_internal_color_image().empty()) {
    const std::string& _s = this->_internal_color_image();
    target = stream->WriteBytesMaybeAliased(4, _s, target);
  }

  // bytes depth_image = 5;
  if (!this->_internal_depth_image().empty()) {
    const std::string& _s = this->_internal_depth_image();
    target = stream->WriteBytesMaybeAliased(5, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientStreamMessage)
  return target;
}

::size_t ClientStreamMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientStreamMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes color_image = 4;
  if (!this->_internal_color_image().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_color_image());
  }

  // bytes depth_image = 5;
  if (!this->_internal_depth_image().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_depth_image());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // .BBox2D bbox2d = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.bbox2d_);
    }

    // .Clock clock = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.clock_);
    }

    // .Camera camera = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.camera_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ClientStreamMessage::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ClientStreamMessage*>(&to_msg);
  auto& from = static_cast<const ClientStreamMessage&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:ClientStreamMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_color_image().empty()) {
    _this->_internal_set_color_image(from._internal_color_image());
  }
  if (!from._internal_depth_image().empty()) {
    _this->_internal_set_depth_image(from._internal_depth_image());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.bbox2d_ != nullptr);
      if (_this->_impl_.bbox2d_ == nullptr) {
        _this->_impl_.bbox2d_ =
            ::google::protobuf::Message::CopyConstruct<::BBox2D>(arena, *from._impl_.bbox2d_);
      } else {
        _this->_impl_.bbox2d_->MergeFrom(*from._impl_.bbox2d_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.clock_ != nullptr);
      if (_this->_impl_.clock_ == nullptr) {
        _this->_impl_.clock_ =
            ::google::protobuf::Message::CopyConstruct<::Clock>(arena, *from._impl_.clock_);
      } else {
        _this->_impl_.clock_->MergeFrom(*from._impl_.clock_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.camera_ != nullptr);
      if (_this->_impl_.camera_ == nullptr) {
        _this->_impl_.camera_ =
            ::google::protobuf::Message::CopyConstruct<::Camera>(arena, *from._impl_.camera_);
      } else {
        _this->_impl_.camera_->MergeFrom(*from._impl_.camera_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ClientStreamMessage::CopyFrom(const ClientStreamMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientStreamMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ClientStreamMessage::IsInitialized() const {
  return true;
}

void ClientStreamMessage::InternalSwap(ClientStreamMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.color_image_, &other->_impl_.color_image_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.depth_image_, &other->_impl_.depth_image_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ClientStreamMessage, _impl_.camera_)
      + sizeof(ClientStreamMessage::_impl_.camera_)
      - PROTOBUF_FIELD_OFFSET(ClientStreamMessage, _impl_.bbox2d_)>(
          reinterpret_cast<char*>(&_impl_.bbox2d_),
          reinterpret_cast<char*>(&other->_impl_.bbox2d_));
}

::google::protobuf::Metadata ClientStreamMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_client_5fstream_5fmessage_2eproto_getter,
                                   &descriptor_table_client_5fstream_5fmessage_2eproto_once,
                                   file_level_metadata_client_5fstream_5fmessage_2eproto[6]);
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::std::false_type _static_init_ PROTOBUF_UNUSED =
    (::_pbi::AddDescriptors(&descriptor_table_client_5fstream_5fmessage_2eproto),
     ::std::false_type{});
#include "google/protobuf/port_undef.inc"
